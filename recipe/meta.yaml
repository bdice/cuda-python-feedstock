{% set name = "cuda-python" %}
{% set version = "12.0.0" %}
{% set major_version = version.split(".")[0] %}
{% set minor_version = version.split(".")[1] %}
{% set patch_version = version.split(".")[2] %}
{% set target_name = "x86_64-linux" %}  # [linux64]
{% set target_name = "ppc64le-linux" %}  # [ppc64le]
{% set target_name = "sbsa-linux" %}  # [aarch64]
{% set target_name = "x64" %}  # [win]

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/NVIDIA/cuda-python/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 7df0f84c4b6210112353374a7d992bfd5bba9c97358b39ea03b61bd634ce9c8a

build:
  number: 0
  skip: true  # [win or osx or cuda_compiler_version != "12.0"]
  script:
    - {{ PYTHON }} -m pip install . --no-deps -vv
  script_env:
    # Ensure that CUDA includes can be found by the host compiler
    - export CUDA_HOME="${BUILD_PREFIX}/targets/{{ target_name }}"
  run_exports:
    - cuda-python >=12.0.0

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}
    - cuda-nvrtc-dev
    - cuda-profiler-api
    - sysroot_{{ target_platform }} 2.17  # [linux]
  host:
    - cython
    - pip
    - pyclibrary
    - python
    - setuptools
  run:
    - python
    - cuda-version >=12.0
    - cuda-cudart
    - cuda-nvrtc
    - pywin32  # [win]

test:
  imports:
    - cuda
    - cuda.cuda
    - cuda.cudart

about:
  home: https://github.com/NVIDIA/cuda-python
  license: LicenseRef-NVIDIA-SOFTWARE-LICENSE
  license_file: LICENSE
  license_url: https://github.com/NVIDIA/cuda-python/blob/main/LICENSE
  summary: CUDA Python Low-level Bindings
  description: |
    CUDA Python provides a standard set of low-level interfaces,
    providing full coverage of and access to the CUDA host APIs from Python.
  doc_url: https://nvidia.github.io/cuda-python/
  dev_url: https://github.com/NVIDIA/cuda-python

extra:
  recipe-maintainers:
    - m3vaz
    - jakirkham
    - mmccarty
    - leofang
